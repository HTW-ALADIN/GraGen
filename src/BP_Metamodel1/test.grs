# begin of graph "BP" saved by GrsExport

new graph "BP" "BP"
new :Pattern($ = "$9", type = "XOR", depth = 0, outdegree = 0, probability = 0.183910372286993)
new :Pattern($ = "$5", type = "AND", depth = 0, outdegree = 0, probability = 0.407349745001341)
new :Pattern($ = "$0", type = "AND", depth = 1, outdegree = 2, probability = 0)
new :Pattern($ = "$3", type = "OR", depth = 0, outdegree = 2, probability = 0.552377112001356)
new :Pattern($ = "$7", type = "LOOP", depth = 0, outdegree = 4, probability = 0.0785837341465912)
new :Event($ = "$1D", id = "")
new :Event($ = "$19", id = "")
new :Event($ = "$15", id = "")
new :Event($ = "$11", id = "")
new :Function($ = "$1E", id = "")
new :Function($ = "$1A", id = "")
new :Function($ = "$16", id = "")
new :Function($ = "$12", id = "")
# total number of nodes: 13

new @("$0") - :ForwardEdge($ = "$1F") -> @("$1D")
new @("$0") - :PatternConnector($ = "$4") -> @("$3")
new @("$3") - :PatternConnector($ = "$8") -> @("$7")
new @("$3") - :PatternConnector($ = "$6") -> @("$5")
new @("$7") - :ForwardEdge($ = "$13") -> @("$11")
new @("$7") - :ForwardEdge($ = "$17") -> @("$15")
new @("$7") - :ForwardEdge($ = "$1B") -> @("$19")
new @("$7") - :PatternConnector($ = "$A") -> @("$9")
new @("$1D") - :ForwardEdge($ = "$20") -> @("$1E")
new @("$19") - :ForwardEdge($ = "$1C") -> @("$1A")
new @("$15") - :ForwardEdge($ = "$18") -> @("$16")
new @("$11") - :ForwardEdge($ = "$14") -> @("$12")
# total number of edges: 12

# total number of internal class objects: 0

# end of graph "BP" saved by GrsExport

